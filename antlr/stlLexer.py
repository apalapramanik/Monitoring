# Generated from stlLexer.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,72,717,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
        91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,
        97,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,
        7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,
        14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,
        17,1,18,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,
        22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,
        26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,
        28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,
        30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,
        32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,
        35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,
        36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,
        37,1,37,1,38,1,38,1,38,1,38,3,38,363,8,38,1,39,1,39,1,39,3,39,368,
        8,39,1,40,1,40,1,40,1,40,3,40,374,8,40,1,41,1,41,1,41,1,41,1,41,
        1,41,3,41,382,8,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,
        3,42,393,8,42,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,45,
        1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,3,46,416,
        8,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,3,47,
        429,8,47,1,48,1,48,1,48,1,48,1,48,1,48,3,48,437,8,48,1,49,1,49,1,
        49,1,49,1,49,1,49,1,49,3,49,446,8,49,1,50,1,50,1,50,1,50,1,50,1,
        50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,3,50,461,8,50,1,51,1,51,1,
        51,1,51,1,51,3,51,468,8,51,1,52,1,52,1,52,1,52,1,52,1,52,3,52,476,
        8,52,1,53,1,53,1,53,1,53,1,53,3,53,483,8,53,1,54,1,54,1,54,1,54,
        1,54,3,54,490,8,54,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,57,1,57,
        1,57,1,58,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,3,62,
        513,8,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,3,63,523,8,63,1,
        64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,3,64,535,8,64,1,
        65,1,65,1,65,3,65,540,8,65,1,66,1,66,1,66,3,66,545,8,66,1,66,1,66,
        1,66,3,66,550,8,66,3,66,552,8,66,1,67,1,67,3,67,556,8,67,1,67,3,
        67,559,8,67,1,68,1,68,3,68,563,8,68,1,69,1,69,1,70,4,70,568,8,70,
        11,70,12,70,569,1,71,1,71,3,71,574,8,71,1,72,4,72,577,8,72,11,72,
        12,72,578,1,73,1,73,1,73,1,73,1,74,1,74,3,74,587,8,74,1,74,3,74,
        590,8,74,1,75,1,75,1,76,4,76,595,8,76,11,76,12,76,596,1,77,1,77,
        3,77,601,8,77,1,78,1,78,1,78,1,78,1,79,1,79,3,79,609,8,79,1,79,3,
        79,612,8,79,1,80,1,80,1,81,4,81,617,8,81,11,81,12,81,618,1,82,1,
        82,3,82,623,8,82,1,83,1,83,1,84,1,84,1,84,3,84,630,8,84,1,84,3,84,
        633,8,84,1,84,1,84,1,84,3,84,638,8,84,1,84,1,84,1,84,3,84,643,8,
        84,1,85,1,85,1,85,1,86,1,86,1,87,3,87,651,8,87,1,87,4,87,654,8,87,
        11,87,12,87,655,1,88,1,88,1,89,1,89,5,89,662,8,89,10,89,12,89,665,
        9,89,1,90,1,90,3,90,669,8,90,1,91,1,91,1,91,3,91,674,8,91,1,92,1,
        92,3,92,678,8,92,1,93,1,93,1,94,1,94,1,94,1,94,1,95,4,95,687,8,95,
        11,95,12,95,688,1,95,1,95,1,96,1,96,1,96,1,96,5,96,697,8,96,10,96,
        12,96,700,9,96,1,96,1,96,1,96,1,96,1,96,1,97,1,97,1,97,1,97,5,97,
        711,8,97,10,97,12,97,714,9,97,1,97,1,97,1,698,0,98,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
        16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
        27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
        38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,
        49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,
        117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,0,135,
        0,137,0,139,0,141,0,143,0,145,0,147,0,149,0,151,0,153,0,155,0,157,
        0,159,0,161,0,163,0,165,0,167,67,169,0,171,0,173,0,175,0,177,0,179,
        68,181,0,183,0,185,0,187,0,189,69,191,70,193,71,195,72,1,0,11,1,
        0,49,57,2,0,88,88,120,120,3,0,48,57,65,70,97,102,2,0,66,66,98,98,
        1,0,48,49,2,0,69,69,101,101,2,0,43,43,45,45,2,0,65,90,97,122,1,0,
        10,10,3,0,9,9,12,13,32,32,2,0,10,10,13,13,741,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
        0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
        0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,
        0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
        0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,
        0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,
        0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,
        0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,
        0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
        113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,
        0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,
        1,0,0,0,0,167,1,0,0,0,0,179,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,
        0,193,1,0,0,0,0,195,1,0,0,0,1,197,1,0,0,0,3,199,1,0,0,0,5,201,1,
        0,0,0,7,203,1,0,0,0,9,205,1,0,0,0,11,207,1,0,0,0,13,209,1,0,0,0,
        15,211,1,0,0,0,17,213,1,0,0,0,19,215,1,0,0,0,21,217,1,0,0,0,23,219,
        1,0,0,0,25,221,1,0,0,0,27,223,1,0,0,0,29,225,1,0,0,0,31,227,1,0,
        0,0,33,231,1,0,0,0,35,236,1,0,0,0,37,240,1,0,0,0,39,244,1,0,0,0,
        41,246,1,0,0,0,43,249,1,0,0,0,45,252,1,0,0,0,47,255,1,0,0,0,49,261,
        1,0,0,0,51,268,1,0,0,0,53,274,1,0,0,0,55,281,1,0,0,0,57,290,1,0,
        0,0,59,296,1,0,0,0,61,301,1,0,0,0,63,307,1,0,0,0,65,312,1,0,0,0,
        67,320,1,0,0,0,69,324,1,0,0,0,71,329,1,0,0,0,73,339,1,0,0,0,75,353,
        1,0,0,0,77,362,1,0,0,0,79,367,1,0,0,0,81,373,1,0,0,0,83,381,1,0,
        0,0,85,392,1,0,0,0,87,394,1,0,0,0,89,398,1,0,0,0,91,403,1,0,0,0,
        93,415,1,0,0,0,95,428,1,0,0,0,97,436,1,0,0,0,99,445,1,0,0,0,101,
        460,1,0,0,0,103,467,1,0,0,0,105,475,1,0,0,0,107,482,1,0,0,0,109,
        489,1,0,0,0,111,491,1,0,0,0,113,494,1,0,0,0,115,498,1,0,0,0,117,
        501,1,0,0,0,119,504,1,0,0,0,121,506,1,0,0,0,123,508,1,0,0,0,125,
        512,1,0,0,0,127,522,1,0,0,0,129,534,1,0,0,0,131,539,1,0,0,0,133,
        551,1,0,0,0,135,553,1,0,0,0,137,562,1,0,0,0,139,564,1,0,0,0,141,
        567,1,0,0,0,143,573,1,0,0,0,145,576,1,0,0,0,147,580,1,0,0,0,149,
        584,1,0,0,0,151,591,1,0,0,0,153,594,1,0,0,0,155,600,1,0,0,0,157,
        602,1,0,0,0,159,606,1,0,0,0,161,613,1,0,0,0,163,616,1,0,0,0,165,
        622,1,0,0,0,167,624,1,0,0,0,169,642,1,0,0,0,171,644,1,0,0,0,173,
        647,1,0,0,0,175,650,1,0,0,0,177,657,1,0,0,0,179,659,1,0,0,0,181,
        668,1,0,0,0,183,673,1,0,0,0,185,677,1,0,0,0,187,679,1,0,0,0,189,
        681,1,0,0,0,191,686,1,0,0,0,193,692,1,0,0,0,195,706,1,0,0,0,197,
        198,5,45,0,0,198,2,1,0,0,0,199,200,5,43,0,0,200,4,1,0,0,0,201,202,
        5,42,0,0,202,6,1,0,0,0,203,204,5,47,0,0,204,8,1,0,0,0,205,206,5,
        40,0,0,206,10,1,0,0,0,207,208,5,41,0,0,208,12,1,0,0,0,209,210,5,
        123,0,0,210,14,1,0,0,0,211,212,5,125,0,0,212,16,1,0,0,0,213,214,
        5,91,0,0,214,18,1,0,0,0,215,216,5,93,0,0,216,20,1,0,0,0,217,218,
        5,59,0,0,218,22,1,0,0,0,219,220,5,58,0,0,220,24,1,0,0,0,221,222,
        5,44,0,0,222,26,1,0,0,0,223,224,5,46,0,0,224,28,1,0,0,0,225,226,
        5,64,0,0,226,30,1,0,0,0,227,228,5,97,0,0,228,229,5,98,0,0,229,230,
        5,115,0,0,230,32,1,0,0,0,231,232,5,115,0,0,232,233,5,113,0,0,233,
        234,5,114,0,0,234,235,5,116,0,0,235,34,1,0,0,0,236,237,5,101,0,0,
        237,238,5,120,0,0,238,239,5,112,0,0,239,36,1,0,0,0,240,241,5,112,
        0,0,241,242,5,111,0,0,242,243,5,119,0,0,243,38,1,0,0,0,244,245,5,
        115,0,0,245,40,1,0,0,0,246,247,5,109,0,0,247,248,5,115,0,0,248,42,
        1,0,0,0,249,250,5,117,0,0,250,251,5,115,0,0,251,44,1,0,0,0,252,253,
        5,110,0,0,253,254,5,115,0,0,254,46,1,0,0,0,255,256,5,116,0,0,256,
        257,5,111,0,0,257,258,5,112,0,0,258,259,5,105,0,0,259,260,5,99,0,
        0,260,48,1,0,0,0,261,262,5,105,0,0,262,263,5,109,0,0,263,264,5,112,
        0,0,264,265,5,111,0,0,265,266,5,114,0,0,266,267,5,116,0,0,267,50,
        1,0,0,0,268,269,5,105,0,0,269,270,5,110,0,0,270,271,5,112,0,0,271,
        272,5,117,0,0,272,273,5,116,0,0,273,52,1,0,0,0,274,275,5,111,0,0,
        275,276,5,117,0,0,276,277,5,116,0,0,277,278,5,112,0,0,278,279,5,
        117,0,0,279,280,5,116,0,0,280,54,1,0,0,0,281,282,5,105,0,0,282,283,
        5,110,0,0,283,284,5,116,0,0,284,285,5,101,0,0,285,286,5,114,0,0,
        286,287,5,110,0,0,287,288,5,97,0,0,288,289,5,108,0,0,289,56,1,0,
        0,0,290,291,5,99,0,0,291,292,5,111,0,0,292,293,5,110,0,0,293,294,
        5,115,0,0,294,295,5,116,0,0,295,58,1,0,0,0,296,297,5,114,0,0,297,
        298,5,101,0,0,298,299,5,97,0,0,299,300,5,108,0,0,300,60,1,0,0,0,
        301,302,5,102,0,0,302,303,5,108,0,0,303,304,5,111,0,0,304,305,5,
        97,0,0,305,306,5,116,0,0,306,62,1,0,0,0,307,308,5,108,0,0,308,309,
        5,111,0,0,309,310,5,110,0,0,310,311,5,103,0,0,311,64,1,0,0,0,312,
        313,5,99,0,0,313,314,5,111,0,0,314,315,5,109,0,0,315,316,5,112,0,
        0,316,317,5,108,0,0,317,318,5,101,0,0,318,319,5,120,0,0,319,66,1,
        0,0,0,320,321,5,105,0,0,321,322,5,110,0,0,322,323,5,116,0,0,323,
        68,1,0,0,0,324,325,5,98,0,0,325,326,5,111,0,0,326,327,5,111,0,0,
        327,328,5,108,0,0,328,70,1,0,0,0,329,330,5,97,0,0,330,331,5,115,
        0,0,331,332,5,115,0,0,332,333,5,101,0,0,333,334,5,114,0,0,334,335,
        5,116,0,0,335,336,5,105,0,0,336,337,5,111,0,0,337,338,5,110,0,0,
        338,72,1,0,0,0,339,340,5,115,0,0,340,341,5,112,0,0,341,342,5,101,
        0,0,342,343,5,99,0,0,343,344,5,105,0,0,344,345,5,102,0,0,345,346,
        5,105,0,0,346,347,5,99,0,0,347,348,5,97,0,0,348,349,5,116,0,0,349,
        350,5,105,0,0,350,351,5,111,0,0,351,352,5,110,0,0,352,74,1,0,0,0,
        353,354,5,102,0,0,354,355,5,114,0,0,355,356,5,111,0,0,356,357,5,
        109,0,0,357,76,1,0,0,0,358,359,5,110,0,0,359,360,5,111,0,0,360,363,
        5,116,0,0,361,363,5,33,0,0,362,358,1,0,0,0,362,361,1,0,0,0,363,78,
        1,0,0,0,364,365,5,111,0,0,365,368,5,114,0,0,366,368,5,124,0,0,367,
        364,1,0,0,0,367,366,1,0,0,0,368,80,1,0,0,0,369,370,5,97,0,0,370,
        371,5,110,0,0,371,374,5,100,0,0,372,374,5,38,0,0,373,369,1,0,0,0,
        373,372,1,0,0,0,374,82,1,0,0,0,375,376,5,105,0,0,376,377,5,102,0,
        0,377,382,5,102,0,0,378,379,5,60,0,0,379,380,5,45,0,0,380,382,5,
        62,0,0,381,375,1,0,0,0,381,378,1,0,0,0,382,84,1,0,0,0,383,384,5,
        105,0,0,384,385,5,109,0,0,385,386,5,112,0,0,386,387,5,108,0,0,387,
        388,5,105,0,0,388,389,5,101,0,0,389,393,5,115,0,0,390,391,5,45,0,
        0,391,393,5,62,0,0,392,383,1,0,0,0,392,390,1,0,0,0,393,86,1,0,0,
        0,394,395,5,120,0,0,395,396,5,111,0,0,396,397,5,114,0,0,397,88,1,
        0,0,0,398,399,5,114,0,0,399,400,5,105,0,0,400,401,5,115,0,0,401,
        402,5,101,0,0,402,90,1,0,0,0,403,404,5,102,0,0,404,405,5,97,0,0,
        405,406,5,108,0,0,406,407,5,108,0,0,407,92,1,0,0,0,408,409,5,97,
        0,0,409,410,5,108,0,0,410,411,5,119,0,0,411,412,5,97,0,0,412,413,
        5,121,0,0,413,416,5,115,0,0,414,416,5,71,0,0,415,408,1,0,0,0,415,
        414,1,0,0,0,416,94,1,0,0,0,417,418,5,101,0,0,418,419,5,118,0,0,419,
        420,5,101,0,0,420,421,5,110,0,0,421,422,5,116,0,0,422,423,5,117,
        0,0,423,424,5,97,0,0,424,425,5,108,0,0,425,426,5,108,0,0,426,429,
        5,121,0,0,427,429,5,70,0,0,428,417,1,0,0,0,428,427,1,0,0,0,429,96,
        1,0,0,0,430,431,5,117,0,0,431,432,5,110,0,0,432,433,5,116,0,0,433,
        434,5,105,0,0,434,437,5,108,0,0,435,437,5,85,0,0,436,430,1,0,0,0,
        436,435,1,0,0,0,437,98,1,0,0,0,438,439,5,117,0,0,439,440,5,110,0,
        0,440,441,5,108,0,0,441,442,5,101,0,0,442,443,5,115,0,0,443,446,
        5,115,0,0,444,446,5,87,0,0,445,438,1,0,0,0,445,444,1,0,0,0,446,100,
        1,0,0,0,447,448,5,104,0,0,448,449,5,105,0,0,449,450,5,115,0,0,450,
        451,5,116,0,0,451,452,5,111,0,0,452,453,5,114,0,0,453,454,5,105,
        0,0,454,455,5,99,0,0,455,456,5,97,0,0,456,457,5,108,0,0,457,458,
        5,108,0,0,458,461,5,121,0,0,459,461,5,72,0,0,460,447,1,0,0,0,460,
        459,1,0,0,0,461,102,1,0,0,0,462,463,5,111,0,0,463,464,5,110,0,0,
        464,465,5,99,0,0,465,468,5,101,0,0,466,468,5,79,0,0,467,462,1,0,
        0,0,467,466,1,0,0,0,468,104,1,0,0,0,469,470,5,115,0,0,470,471,5,
        105,0,0,471,472,5,110,0,0,472,473,5,99,0,0,473,476,5,101,0,0,474,
        476,5,83,0,0,475,469,1,0,0,0,475,474,1,0,0,0,476,106,1,0,0,0,477,
        478,5,110,0,0,478,479,5,101,0,0,479,480,5,120,0,0,480,483,5,116,
        0,0,481,483,5,88,0,0,482,477,1,0,0,0,482,481,1,0,0,0,483,108,1,0,
        0,0,484,485,5,112,0,0,485,486,5,114,0,0,486,487,5,101,0,0,487,490,
        5,118,0,0,488,490,5,89,0,0,489,484,1,0,0,0,489,488,1,0,0,0,490,110,
        1,0,0,0,491,492,5,61,0,0,492,493,5,61,0,0,493,112,1,0,0,0,494,495,
        5,33,0,0,495,496,5,61,0,0,496,497,5,61,0,0,497,114,1,0,0,0,498,499,
        5,62,0,0,499,500,5,61,0,0,500,116,1,0,0,0,501,502,5,60,0,0,502,503,
        5,61,0,0,503,118,1,0,0,0,504,505,5,62,0,0,505,120,1,0,0,0,506,507,
        5,60,0,0,507,122,1,0,0,0,508,509,5,61,0,0,509,124,1,0,0,0,510,513,
        3,127,63,0,511,513,3,129,64,0,512,510,1,0,0,0,512,511,1,0,0,0,513,
        126,1,0,0,0,514,515,5,116,0,0,515,516,5,114,0,0,516,517,5,117,0,
        0,517,523,5,101,0,0,518,519,5,84,0,0,519,520,5,82,0,0,520,521,5,
        85,0,0,521,523,5,69,0,0,522,514,1,0,0,0,522,518,1,0,0,0,523,128,
        1,0,0,0,524,525,5,102,0,0,525,526,5,97,0,0,526,527,5,108,0,0,527,
        528,5,115,0,0,528,535,5,101,0,0,529,530,5,70,0,0,530,531,5,65,0,
        0,531,532,5,76,0,0,532,533,5,83,0,0,533,535,5,69,0,0,534,524,1,0,
        0,0,534,529,1,0,0,0,535,130,1,0,0,0,536,540,3,133,66,0,537,540,3,
        147,73,0,538,540,3,157,78,0,539,536,1,0,0,0,539,537,1,0,0,0,539,
        538,1,0,0,0,540,132,1,0,0,0,541,552,5,48,0,0,542,549,3,139,69,0,
        543,545,3,135,67,0,544,543,1,0,0,0,544,545,1,0,0,0,545,550,1,0,0,
        0,546,547,3,145,72,0,547,548,3,135,67,0,548,550,1,0,0,0,549,544,
        1,0,0,0,549,546,1,0,0,0,550,552,1,0,0,0,551,541,1,0,0,0,551,542,
        1,0,0,0,552,134,1,0,0,0,553,558,3,137,68,0,554,556,3,141,70,0,555,
        554,1,0,0,0,555,556,1,0,0,0,556,557,1,0,0,0,557,559,3,137,68,0,558,
        555,1,0,0,0,558,559,1,0,0,0,559,136,1,0,0,0,560,563,5,48,0,0,561,
        563,3,139,69,0,562,560,1,0,0,0,562,561,1,0,0,0,563,138,1,0,0,0,564,
        565,7,0,0,0,565,140,1,0,0,0,566,568,3,143,71,0,567,566,1,0,0,0,568,
        569,1,0,0,0,569,567,1,0,0,0,569,570,1,0,0,0,570,142,1,0,0,0,571,
        574,3,137,68,0,572,574,5,95,0,0,573,571,1,0,0,0,573,572,1,0,0,0,
        574,144,1,0,0,0,575,577,5,95,0,0,576,575,1,0,0,0,577,578,1,0,0,0,
        578,576,1,0,0,0,578,579,1,0,0,0,579,146,1,0,0,0,580,581,5,48,0,0,
        581,582,7,1,0,0,582,583,3,149,74,0,583,148,1,0,0,0,584,589,3,151,
        75,0,585,587,3,153,76,0,586,585,1,0,0,0,586,587,1,0,0,0,587,588,
        1,0,0,0,588,590,3,151,75,0,589,586,1,0,0,0,589,590,1,0,0,0,590,150,
        1,0,0,0,591,592,7,2,0,0,592,152,1,0,0,0,593,595,3,155,77,0,594,593,
        1,0,0,0,595,596,1,0,0,0,596,594,1,0,0,0,596,597,1,0,0,0,597,154,
        1,0,0,0,598,601,3,151,75,0,599,601,5,95,0,0,600,598,1,0,0,0,600,
        599,1,0,0,0,601,156,1,0,0,0,602,603,5,48,0,0,603,604,7,3,0,0,604,
        605,3,159,79,0,605,158,1,0,0,0,606,611,3,161,80,0,607,609,3,163,
        81,0,608,607,1,0,0,0,608,609,1,0,0,0,609,610,1,0,0,0,610,612,3,161,
        80,0,611,608,1,0,0,0,611,612,1,0,0,0,612,160,1,0,0,0,613,614,7,4,
        0,0,614,162,1,0,0,0,615,617,3,165,82,0,616,615,1,0,0,0,617,618,1,
        0,0,0,618,616,1,0,0,0,618,619,1,0,0,0,619,164,1,0,0,0,620,623,3,
        161,80,0,621,623,5,95,0,0,622,620,1,0,0,0,622,621,1,0,0,0,623,166,
        1,0,0,0,624,625,3,169,84,0,625,168,1,0,0,0,626,627,3,135,67,0,627,
        629,5,46,0,0,628,630,3,135,67,0,629,628,1,0,0,0,629,630,1,0,0,0,
        630,632,1,0,0,0,631,633,3,171,85,0,632,631,1,0,0,0,632,633,1,0,0,
        0,633,643,1,0,0,0,634,635,5,46,0,0,635,637,3,135,67,0,636,638,3,
        171,85,0,637,636,1,0,0,0,637,638,1,0,0,0,638,643,1,0,0,0,639,640,
        3,135,67,0,640,641,3,171,85,0,641,643,1,0,0,0,642,626,1,0,0,0,642,
        634,1,0,0,0,642,639,1,0,0,0,643,170,1,0,0,0,644,645,3,173,86,0,645,
        646,3,175,87,0,646,172,1,0,0,0,647,648,7,5,0,0,648,174,1,0,0,0,649,
        651,3,177,88,0,650,649,1,0,0,0,650,651,1,0,0,0,651,653,1,0,0,0,652,
        654,3,137,68,0,653,652,1,0,0,0,654,655,1,0,0,0,655,653,1,0,0,0,655,
        656,1,0,0,0,656,176,1,0,0,0,657,658,7,6,0,0,658,178,1,0,0,0,659,
        663,3,181,90,0,660,662,3,183,91,0,661,660,1,0,0,0,662,665,1,0,0,
        0,663,661,1,0,0,0,663,664,1,0,0,0,664,180,1,0,0,0,665,663,1,0,0,
        0,666,669,3,185,92,0,667,669,5,36,0,0,668,666,1,0,0,0,668,667,1,
        0,0,0,669,182,1,0,0,0,670,674,3,181,90,0,671,674,3,137,68,0,672,
        674,2,46,47,0,673,670,1,0,0,0,673,671,1,0,0,0,673,672,1,0,0,0,674,
        184,1,0,0,0,675,678,3,187,93,0,676,678,5,95,0,0,677,675,1,0,0,0,
        677,676,1,0,0,0,678,186,1,0,0,0,679,680,7,7,0,0,680,188,1,0,0,0,
        681,682,7,8,0,0,682,683,1,0,0,0,683,684,6,94,0,0,684,190,1,0,0,0,
        685,687,7,9,0,0,686,685,1,0,0,0,687,688,1,0,0,0,688,686,1,0,0,0,
        688,689,1,0,0,0,689,690,1,0,0,0,690,691,6,95,0,0,691,192,1,0,0,0,
        692,693,5,47,0,0,693,694,5,42,0,0,694,698,1,0,0,0,695,697,9,0,0,
        0,696,695,1,0,0,0,697,700,1,0,0,0,698,699,1,0,0,0,698,696,1,0,0,
        0,699,701,1,0,0,0,700,698,1,0,0,0,701,702,5,42,0,0,702,703,5,47,
        0,0,703,704,1,0,0,0,704,705,6,96,0,0,705,194,1,0,0,0,706,707,5,47,
        0,0,707,708,5,47,0,0,708,712,1,0,0,0,709,711,8,10,0,0,710,709,1,
        0,0,0,711,714,1,0,0,0,712,710,1,0,0,0,712,713,1,0,0,0,713,715,1,
        0,0,0,714,712,1,0,0,0,715,716,6,97,0,0,716,196,1,0,0,0,49,0,362,
        367,373,381,392,415,428,436,445,460,467,475,482,489,512,522,534,
        539,544,549,551,555,558,562,569,573,578,586,589,596,600,608,611,
        618,622,629,632,637,642,650,655,663,668,673,677,688,698,712,1,6,
        0,0
    ]

class stlLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    MINUS = 1
    PLUS = 2
    TIMES = 3
    DIVIDE = 4
    LPAREN = 5
    RPAREN = 6
    LBRACE = 7
    RBRACE = 8
    LBRACK = 9
    RBRACK = 10
    SEMICOLON = 11
    COLON = 12
    COMMA = 13
    DOT = 14
    AT = 15
    ABS = 16
    SQRT = 17
    EXP = 18
    POW = 19
    SEC = 20
    MSEC = 21
    USEC = 22
    NSEC = 23
    ROS_Topic = 24
    Import = 25
    Input = 26
    Output = 27
    Internal = 28
    Constant = 29
    DomainTypeReal = 30
    DomainTypeFloat = 31
    DomainTypeLong = 32
    DomainTypeComplex = 33
    DomainTypeInt = 34
    DomainTypeBool = 35
    Assertion = 36
    Specification = 37
    From = 38
    NotOperator = 39
    OrOperator = 40
    AndOperator = 41
    IffOperator = 42
    ImpliesOperator = 43
    XorOperator = 44
    RiseOperator = 45
    FallOperator = 46
    AlwaysOperator = 47
    EventuallyOperator = 48
    UntilOperator = 49
    UnlessOperator = 50
    HistoricallyOperator = 51
    OnceOperator = 52
    SinceOperator = 53
    NextOperator = 54
    PreviousOperator = 55
    EqualOperator = 56
    NotEqualOperator = 57
    GreaterOrEqualOperator = 58
    LesserOrEqualOperator = 59
    GreaterOperator = 60
    LesserOperator = 61
    EQUAL = 62
    BooleanLiteral = 63
    TRUE = 64
    FALSE = 65
    IntegerLiteral = 66
    RealLiteral = 67
    Identifier = 68
    LINE_TERMINATOR = 69
    WHITESPACE = 70
    COMMENT = 71
    LINE_COMMENT = 72

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'-'", "'+'", "'*'", "'/'", "'('", "')'", "'{'", "'}'", "'['", 
            "']'", "';'", "':'", "','", "'.'", "'@'", "'abs'", "'sqrt'", 
            "'exp'", "'pow'", "'s'", "'ms'", "'us'", "'ns'", "'topic'", 
            "'import'", "'input'", "'output'", "'internal'", "'const'", 
            "'real'", "'float'", "'long'", "'complex'", "'int'", "'bool'", 
            "'assertion'", "'specification'", "'from'", "'xor'", "'rise'", 
            "'fall'", "'=='", "'!=='", "'>='", "'<='", "'>'", "'<'", "'='" ]

    symbolicNames = [ "<INVALID>",
            "MINUS", "PLUS", "TIMES", "DIVIDE", "LPAREN", "RPAREN", "LBRACE", 
            "RBRACE", "LBRACK", "RBRACK", "SEMICOLON", "COLON", "COMMA", 
            "DOT", "AT", "ABS", "SQRT", "EXP", "POW", "SEC", "MSEC", "USEC", 
            "NSEC", "ROS_Topic", "Import", "Input", "Output", "Internal", 
            "Constant", "DomainTypeReal", "DomainTypeFloat", "DomainTypeLong", 
            "DomainTypeComplex", "DomainTypeInt", "DomainTypeBool", "Assertion", 
            "Specification", "From", "NotOperator", "OrOperator", "AndOperator", 
            "IffOperator", "ImpliesOperator", "XorOperator", "RiseOperator", 
            "FallOperator", "AlwaysOperator", "EventuallyOperator", "UntilOperator", 
            "UnlessOperator", "HistoricallyOperator", "OnceOperator", "SinceOperator", 
            "NextOperator", "PreviousOperator", "EqualOperator", "NotEqualOperator", 
            "GreaterOrEqualOperator", "LesserOrEqualOperator", "GreaterOperator", 
            "LesserOperator", "EQUAL", "BooleanLiteral", "TRUE", "FALSE", 
            "IntegerLiteral", "RealLiteral", "Identifier", "LINE_TERMINATOR", 
            "WHITESPACE", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "MINUS", "PLUS", "TIMES", "DIVIDE", "LPAREN", "RPAREN", 
                  "LBRACE", "RBRACE", "LBRACK", "RBRACK", "SEMICOLON", "COLON", 
                  "COMMA", "DOT", "AT", "ABS", "SQRT", "EXP", "POW", "SEC", 
                  "MSEC", "USEC", "NSEC", "ROS_Topic", "Import", "Input", 
                  "Output", "Internal", "Constant", "DomainTypeReal", "DomainTypeFloat", 
                  "DomainTypeLong", "DomainTypeComplex", "DomainTypeInt", 
                  "DomainTypeBool", "Assertion", "Specification", "From", 
                  "NotOperator", "OrOperator", "AndOperator", "IffOperator", 
                  "ImpliesOperator", "XorOperator", "RiseOperator", "FallOperator", 
                  "AlwaysOperator", "EventuallyOperator", "UntilOperator", 
                  "UnlessOperator", "HistoricallyOperator", "OnceOperator", 
                  "SinceOperator", "NextOperator", "PreviousOperator", "EqualOperator", 
                  "NotEqualOperator", "GreaterOrEqualOperator", "LesserOrEqualOperator", 
                  "GreaterOperator", "LesserOperator", "EQUAL", "BooleanLiteral", 
                  "TRUE", "FALSE", "IntegerLiteral", "DecimalNumeral", "Digits", 
                  "Digit", "NonZeroDigit", "DigitsAndUnderscores", "DigitOrUnderscore", 
                  "Underscores", "HexNumeral", "HexDigits", "HexDigit", 
                  "HexDigitsAndUnderscores", "HexDigitOrUnderscore", "BinaryNumeral", 
                  "BinaryDigits", "BinaryDigit", "BinaryDigitsAndUnderscores", 
                  "BinaryDigitOrUnderscore", "RealLiteral", "DecimalRealLiteral", 
                  "ExponentPart", "ExponentIndicator", "SignedInteger", 
                  "Sign", "Identifier", "IdentifierStart", "IdentifierPart", 
                  "LetterOrUnderscore", "Letter", "LINE_TERMINATOR", "WHITESPACE", 
                  "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "stlLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


